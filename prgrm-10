import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.decomposition import PCA
from sklearn.metrics import confusion_matrix, classification_report,ConfusionMatrixDisplay

data = pd.read_csv("Wisconsin_Breast_Cancer.csv")
data.head()
data.shape
data.info()
data1 = data.drop(columns=['id', 'Unnamed: 32'])
 data1.head()
 data1.shape
 missing_value = data1.isnull().sum()
 missing_value

 data1['diagnosis'].value_counts()

le = LabelEncoder()
data1['diagnosis'] = le.fit_transform(data1['diagnosis']) 
data1['diagnosis'].value_counts()
X = data1.drop(['diagnosis'], axis=1)
y = data1['diagnosis']

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

pca = PCA(n_components=0.95, random_state=42)
X_pca = pca.fit_transform(X_scaled)

 kmeans = KMeans(n_clusters=2, random_state=42, n_init=10)
 y_clusters = kmeans.fit_predict(X_pca)

 cm = confusion_matrix(y, y_clusters)
 print("Confusion Matrix:\n", cm)

disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=['Benign','Malignant'])
disp.plot(cmap='Blues')

CR=classification_report(y, y_clusters)
print("Classification Report:\n",CR)

X_pca_2d = X_pca[:, :2]
data1_vis = pd.DataFrame(X_pca_2d, columns=['PC1', 'PC2'])
data1_vis['Cluster'] = y_clusters
data1_vis['True Label'] = y

 plt.figure(figsize=(8, 6))
 sns.scatterplot(data=data1_vis, x='PC1', y='PC2', hue='Cluster', palette='Set1',
 s=100, edgecolor='black')
 plt.title('K-Means Clustering (Predicted Clusters)')
 plt.xlabel('Principal Component 1')
 plt.ylabel('Principal Component 2')
 plt.legend(title='Cluster')
 plt.grid(True)
 plt.show()

plt.figure(figsize=(8, 6))
sns.scatterplot(data=data1_vis, x='PC1', y='PC2', hue='True Label',palette='coolwarm',s=100, edgecolor='black')
plt.title('True Labels- Actual Diagnosis')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.legend(title='True Label')
plt.grid(True)
plt.show()

centers_2d = kmeans.cluster_centers_[:, :2]
 plt.figure(figsize=(8, 6))
 sns.scatterplot(data=data1_vis, x='PC1', y='PC2', hue='Cluster', palette='Set1',
 s=100, edgecolor='black')
 plt.scatter(centers_2d[:, 0], centers_2d[:, 1], c='red', s=200, marker='X',␣
 ↪label='Centroids')
 plt.title('K-Means Clustering with Centroids')
 plt.xlabel('Principal Component 1')
 plt.ylabel('Principal Component 2')
 plt.legend()
 plt.grid(True)
 plt.show()

from sklearn.cluster import DBSCAN
import numpy as np
X = np.array([[1, 2], [2, 3], [2, 2], [8, 7], [8, 8], [25, 80]])

dbscan = DBSCAN(eps=3, min_samples=2)
labels = dbscan.fit_predict(X)
print("Cluster labels:", labels)
